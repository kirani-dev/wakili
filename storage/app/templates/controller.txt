        /**
         * return {model}'s index view
         */
    public function index(){
        return view($this->folder.'index',[

        ]);
    }

    /**
     * store {model}
     */
    public function store{umodel}(){
        request()->validate($this->getValidationFields());
        $data = \request()->all();
        if(!isset($data['user_id'])) {
            if (Schema::hasColumn('{models}', 'user_id'))
                $data['user_id'] = request()->user()->id;
        }

        $this->autoSaveModel($data);

        $action = \request('id') ? 'updated' : 'saved';
        return redirect()->back()->with('notice',['type'=>'success','message'=>'{umodel} '.$action.' successfully']);
    }

    /**
     * return {model} values
     */
    public function list{umodels}(){
        ${models} = {umodel}::where([
            ['id','>',0]
        ]);
        if(\request('all'))
            return ${models}->get();
        return SearchRepo::of(${models})
            ->addColumn('action',function(${model}){
                $str = '';
                $json = json_encode(${model});
                $str.='<a href="#" data-model="'.htmlentities($json, ENT_QUOTES, 'UTF-8').'" onclick="prepareEdit(this,\'{model}_modal\');" class="btn badge btn-info btn-sm"><i class="fa fa-edit"></i> Edit</a>';
            //    $str.='&nbsp;&nbsp;<a href="#" onclick="deleteItem(\''.url(request()->user()->role.'/{models}/delete').'\',\''.${model}->id.'\');" class="btn badge btn-outline-danger btn-sm"><i class="fa fa-trash"></i> Delete</a>';
                return $str;
            })->make();
    }

    /**
     * delete {model}
     */
    public function destroy{umodel}(${model}_id)
    {
        ${model} = {umodel}::findOrFail(${model}_id);
        ${model}->delete();
        return redirect()->back()->with('notice',['type'=>'success','message'=>'{umodel} deleted successfully']);
    }
